[tool.poetry]
name = "pynenc"
version = "0.0.0"
description = "A simple task management system for complex distributed orchestration"
authors = ["Jose Diaz"]
license = "MIT License"
readme = "README.md"
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

[tool.poetry.dependencies]
python = "^3.11"
redis = "4.6.0"
pyyaml = "^6.0.1"


[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.1,<8.0.0"
coverage = {version = ">=7.2.6,<8.0", extras = ["toml"]}
mypy = "1.7.0"
ruff = "0.0.47"
black = "23.11.0"
types-redis = "4.6.0.2"
sphinx = "^7.0"
myst-parser = "^2"
furo = "^2023"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.urls]
homepage = 'https://pynenc.org'
documentation = 'https://pynenc.org/docs/'
repository = 'https://github.com/pynenc/pynenc'


[tool.black]
line-length = 88
target-version = ['py311']
required-version = '23.3.0'
exclude = '''
/(
  \.mypy_cache
  | env
  | venv
)/
'''

[tool.ruff]
line-length = 88
update-check = false
target-version = "py311"
fix = true
unfixable = []
exclude = [
  ".eggs/*.py",
  ".venv",
  ".env",
]

[tool.mypy]
files = ["pynenc"]
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = 'venv,env'
show_error_codes = true
pretty = true
allow_redefinition = true
no_implicit_optional = true
strict_equality = true

[tool.pylint.messages_control]
max-line-length = 88
disable = [
  "line-too-long",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-boolean-expressions",
  "too-many-branches",
  "too-many-function-args",
  "too-many-instance-attributes",
  "too-many-locals",
  "too-many-nested-blocks",
  "too-many-public-methods",
  "too-many-return-statements",
  "too-many-statements",
]

[tool.pylint.master]
ignore = "venv,env"

[pytest]
log_cli = true
